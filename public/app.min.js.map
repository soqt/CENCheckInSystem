{"version":3,"sources":["cenApp.js","app/app.Controller.js","events/event.controller.js","events/events.controller.js","home/home.controller.js","officers/edit.controller.js","officers/officers.controller.js","auth/login/login.controller.js","javascripts/services/Authentication.service.js","javascripts/services/Event.service.js","javascripts/services/Events.service.js","javascripts/services/Officers.service.js","javascripts/directives/navbar/navbar.controller.js","javascripts/directives/navbar/navbar.directive.js"],"names":["config","$routeProvider","$locationProvider","$momentProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","asyncLoading","scriptUrl","run","$rootScope","$location","Authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","$inject","loginController","vm","this","toOfficers","toEvents","eventController","$scope","EventsService","$routeParams","EventOperation","eventID","event_id","get","checkin","user_id","then","response","console","log","uncheckin","vacate","unvacate","eventsController","$moment","updateEventsList","events","query","i","len","length","start_time","toCheckIn","deleteEvent","delete","_id","newEvent","name","addEvent","save","alert","homeCtrl","officersUpdateController","OfficerService","$http","errorMessage","officerID","officer_id","currentOfficer","id","url","update","put","data","active","officersController","officers","officer","ms","total_late_time","d","duration","lateTime","Math","floor","asHours","utc","format","newOfficer","addOfficer","user","push","editOfficer","credentials","username","password","login","err","message","$window","admin","post","token","saveToken","localStorage","getToken","logout","removeItem","payload","split","atob","JSON","parse","exp","Date","now","currentUser","service","remove","$resource","factory","navbarController","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('cenApp', ['ngRoute', 'ngResource', 'angular-momentjs'])\n        .config(config)\n        .run(run);\n\n    config.$inject = ['$routeProvider', '$locationProvider', '$momentProvider'];\n    function config ($routeProvider, $locationProvider, $momentProvider) {\n        $routeProvider\n            .when('/', {\n                templateUrl: 'home/home.view.html',\n                controller: 'homeCtrl',\n                controllerAs: 'vm'\n            })\n            .when('/login', {\n                templateUrl: '/auth/login/login.view.html',\n                controller: 'loginController',\n                controllerAs: 'vm'\n            })\n            .when('/app', {\n                templateUrl: '/app/app.view.html',\n                controller: 'appController',\n                controllerAs: 'vm'\n            })\n            .when('/officers', {\n                templateUrl: '/officers/officers.view.html',\n                controller: 'officersController',\n                controllerAs: 'vm'\n            })\n            .when('/officers/edit/:officer_id', {\n                templateUrl: '/officers/edit.view.html',\n                controller: 'officersUpdateController',\n                controllerAs: 'vm'\n            })\n            .when('/officers/analysis', {\n                templateUrl: '/officers/analysis.view.html',\n                controller: 'officersController',\n                controllerAs: 'vm'\n            })\n            .when('/events', {\n                templateUrl: '/events/events.view.html',\n                controller: 'eventsController',\n                controllerAs: 'vm'\n            })\n            .when('/events/:event_id', {\n                templateUrl: '/events/event.view.html',\n                controller: 'eventController',\n                controllerAs: 'vm'\n            })\n            .otherwise({redirectTo: '/'});\n\n        // use the HTML5 History API\n        $locationProvider.html5Mode(true);\n\n        // MomentJS setup\n        $momentProvider\n            .asyncLoading(false)\n            .scriptUrl('//cdnjs.cloudflare.com/ajax/libs/moment.js/2.5.1/moment.min.js');\n    }\n\n    run.$inject= ['$rootScope', '$location', 'Authentication'];\n    function run($rootScope, $location, Authentication) {\n        $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n            if ($location.path() === '/app' && !Authentication.isLoggedIn()) {\n                $location.path('/');\n            }\n        });\n\n    }\n\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('appController', loginController);\n\n\n    loginController.$inject = ['$location', 'Authentication'];\n    function loginController($location, Authentication) {\n        var vm = this;\n\n        vm.toOfficers = function() {\n            $location.path('officers');\n        };\n        vm.toEvents = function () {\n            $location.path('events')\n        };\n    }\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('eventController', eventController);\n\n\n    eventController.$inject = ['$scope','$location', 'EventsService', '$routeParams','EventOperation'];\n    function eventController($scope, $location, EventsService, $routeParams, EventOperation) {\n        var vm = this;\n        var eventID = $routeParams.event_id;\n        vm.event = EventsService.get({event_id: eventID});\n\n        vm.checkin = function (user_id) {\n            EventOperation.checkin(eventID, user_id)\n                .then(function successCallback(response) {\n                    vm.event = EventsService.get({event_id: eventID});\n                }, function errorCallback(response) {\n                    console.log(response);\n                });\n        };\n\n\n        vm.uncheckin = function (user_id) {\n            EventOperation.uncheckin(eventID, user_id)\n                .then(function successCallback(response) {\n                    vm.event = EventsService.get({event_id: eventID});\n                }, function errorCallback(response) {\n                    console.log(response);\n                });\n        };\n\n        vm.vacate = function (user_id) {\n            EventOperation.vacate(eventID, user_id)\n                .then(function successCallback(response) {\n                    vm.event = EventsService.get({event_id: eventID});\n                }, function errorCallback(response) {\n                    console.log(response);\n                });\n        };\n\n        vm.unvacate = function (user_id) {\n            EventOperation.unvacate(eventID, user_id)\n                .then(function successCallback(response) {\n                    vm.event = EventsService.get({event_id: eventID});\n                }, function errorCallback(response) {\n                    console.log(response);\n                });\n        };\n    }\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('eventsController', eventsController);\n\n\n    eventsController.$inject = ['$scope','$location', 'EventsService','$moment'];\n    function eventsController($scope, $location, EventsService, $moment) {\n        var vm = this;\n\n        vm.events = updateEventsList();\n\n        vm.toCheckIn = function (event_id) {\n            $location.path('events/' + event_id);\n        };\n\n        vm.deleteEvent = function (event) {\n            EventsService.delete({event_id: event._id}, function () {\n                vm.events = updateEventsList();\n            });\n        };\n\n        vm.newEvent ={\n            name: \"\",\n            start_time: \"\"\n        };\n\n        vm.addEvent = function () {\n            EventsService.save(vm.newEvent, function (event) {\n                if(event.name) {\n                    console.log(event);\n                    vm.events = updateEventsList();\n                }else{\n                    alert(\"Event already existed\");\n                }\n            })\n\n        }\n\n\n        function updateEventsList () {\n            var events = EventsService.query(function (events) {\n                for(var i = 0, len = events.length; i < len; i++) {\n                    var event = events[i];\n                    event.start_time = $moment(event.start_time)\n\n                }\n            });\n            return events;\n        }\n\n    }\n})();","(function() {\n\n    angular\n        .module('cenApp')\n        .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n        console.log('Home controller is running');\n    };\n\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('officersUpdateController', officersUpdateController);\n\n\n    officersUpdateController.$inject = ['$location', '$routeParams', 'OfficerService', '$http'];\n    function officersUpdateController($location,$routeParams, OfficerService, $http) {\n        var vm = this;\n        vm.errorMessage = \"\";\n        var officerID = $routeParams.officer_id;\n\n\n        vm.currentOfficer = OfficerService.get({id: officerID});\n\n        var url = \"/api/officers/\" + officerID;\n\n        vm.update = function () {\n            vm.errorMessage = \"\";\n            $http.put(url, vm.currentOfficer)\n                .then(function successCallback(response){\n                        $location.path('officers');\n                        console.log(response);\n                    }, function errorCallback(response) {\n                        vm.errorMessage = response.data;\n                        console.log(response);\n                });\n        };\n\n\n        vm.delete = function () {\n            OfficerService.delete({id: officerID}, function (data) {\n                console.log(data);\n                if(!data.active){\n                    $location.path('officers')\n                }\n            });\n        }\n\n    }\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('officersController', officersController);\n\n\n    officersController.$inject = ['$scope','$location', 'OfficerService', '$moment'];\n    function officersController($scope, $location, OfficerService, $moment) {\n        var vm = this;\n\n        vm.officers = OfficerService.query(function (officers) {\n            for(var i = 0, len = officers.length; i < len; i++) {\n                var officer = officers[i];\n                var ms = officer.total_late_time;\n                console.log(ms);\n                var d = $moment.duration(ms);\n                console.log(d);\n                var lateTime = Math.floor(d.asHours()) + $moment.utc(ms).format(\":mm:ss\");\n                console.log(lateTime);\n                officer.total_late_time = lateTime;\n                //officer.attended_numbers = \"hi\";\n                console.log(\"db1 \", officer.total_late_time);\n\n            }\n        });\n\n        vm.newOfficer ={\n            name: \"\"\n        };\n\n        vm.addOfficer = function () {\n            OfficerService.save(vm.newOfficer, function (user) {\n                if(user.name) {\n                    console.log(user);\n                    vm.officers.push(user);\n                }else{\n                    alert(\"Officer already existed\")\n                }\n            })\n              \n        };\n        \n        vm.editOfficer = function (officer) {\n            $location.path('officers/edit/' + officer._id);\n        };\n\n    }\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('loginController', loginController);\n\n\n    loginController.$inject = ['$location', 'Authentication'];\n    function loginController($location, Authentication) {\n        var vm = this;\n        vm.credentials = {\n            username: \"\",\n            password: \"\"\n        };\n\n        vm.errorMessage = \"\";\n\n        vm.login = function() {\n            vm.errorMessage = \"\";\n            Authentication\n                .login(vm.credentials)\n                .then(function successCallback(response) {\n                        $location.path('app');\n                    }, function errorCallback(err) {\n                        vm.errorMessage = err.data.message;\n                    });\n        }\n    }\n})();","(function () {\n    angular\n        .module('cenApp')\n        .service('Authentication', Authentication);\n\n    Authentication.$inject = ['$http', '$window'];\n    function Authentication($http, $window) {\n        \n        // var register = function (user) {\n        //     $http.post('auth/signup', user).success(function (data) {\n        //        saveToken(data.token);\n        //     });\n        // };\n\n        var login = function (admin) {\n            return $http.post('/auth/login', admin).then(function (data) {\n                console.log(data);\n                console.log(data.data.token);\n                saveToken(data.data.token);\n            });\n        };\n        \n        var saveToken = function (token) {\n            // console.log(data);\n            $window.localStorage['access-token'] = token;\n        };\n\n        var getToken = function () {\n            return $window.localStorage['access-token'];\n        };\n\n        var logout = function () {\n            $window.localStorage.removeItem('access-token');\n        };\n\n        var isLoggedIn = function () {\n            var token = getToken();\n            var payload;\n\n            if (token){\n                payload = token.split('.')[1];\n                payload = $window.atob(payload);\n                payload = JSON.parse(payload);\n                return payload.exp > Date.now() /1000;\n            }else{\n                return false\n            }\n        };\n\n        var currentUser = function() {\n            if(isLoggedIn()){\n                var token = getToken();\n                var payload = token.split('.')[1];\n                payload = $window.atob(payload);\n                payload = JSON.parse(payload);\n                return {\n                    username: payload.username,\n                    name : payload.name\n                };\n            }\n        };\n\n        return {\n            //register: register,\n            login: login,\n            saveToken: saveToken,\n            getToken: getToken,\n            logout: logout,\n            isLoggedIn: isLoggedIn,\n            currentUser: currentUser\n        };\n    }\n})();","(function () {\n    angular\n        .module('cenApp')\n        .service('EventOperation', EventOperation);\n\n    EventOperation.$inject = ['$http', '$window'];\n    function EventOperation($http, $window) {\n\n        var checkin = function (event_id, officer_id) {\n            return $http.put('/api/events/' + event_id + '/checkin/' + officer_id);\n        };\n\n        var uncheckin = function (event_id, officer_id) {\n            return $http.put('/api/events/' + event_id + '/uncheckin/' + officer_id)\n        };\n\n        var vacate = function (event_id, officer_id) {\n            return $http.put('/api/events/' + event_id + '/vacate/' + officer_id)\n        };\n\n        var unvacate = function (event_id, officer_id) {\n            return $http.put('/api/events/' + event_id + '/unvacate/' + officer_id)\n        };\n\n        var remove = function (event_id, officer_id) {\n            return $http.put('/api/events/' + event_id + '/rm/' + officer_id)\n        };\n\n        return {\n            checkin: checkin,\n            uncheckin: uncheckin,\n            vacate: vacate,\n            unvacate: unvacate,\n            remove: remove\n        };\n    }\n})();","(function () {\n    angular\n        .module('cenApp')\n        .factory('EventsService', EventsService);\n\n    EventsService.$inject = ['$resource'];\n    function EventsService($resource) {\n        return $resource('api/events/:event_id');\n    }\n})();","(function () {\n    angular\n        .module('cenApp')\n        .factory('OfficerService', OfficerService);\n\n    OfficerService.$inject = ['$resource'];\n    function OfficerService($resource) {\n            return $resource('api/officers/:id');\n    }\n})();","(function () {\n\n    angular\n        .module('cenApp')\n        .controller('navbarController', navbarController);\n\n    navbarController.$inject = ['$scope','$location','Authentication'];\n    function navbarController($scope, $location, Authentication) {\n        //var vm = this;\n\n        $scope.isLoggedIn = Authentication.isLoggedIn()\n\n        $scope.currentUser = Authentication.currentUser();\n\n        $scope.logout = function () {\n            $scope.isLoggedIn = false\n            $scope.currentUser = \"\"\n            Authentication.logout();\n        }\n    }\n\n})();","(function () {\n\n    angular\n        .module('cenApp')\n        .directive('navbarDirective', function () {\n            return {\n                templateUrl: \"./javascripts/directives/navbar/navbar.template.html\",\n                controller: \"navbarController\"\n            }\n        });\n\n})();"]}