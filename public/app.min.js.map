{"version":3,"sources":["cenApp.js","app/app.Controller.js","home/home.controller.js","events/event.controller.js","events/events.controller.js","navbar/navbar.controller.js","officers/officers.controller.js","auth/login/login.controller.js","javascripts/services/Authentication.service.js","javascripts/services/Event.service.js","javascripts/services/Events.service.js","javascripts/services/Officers.service.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","Authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","$inject","loginController","vm","this","toOfficers","toEvents","homeCtrl","console","log","eventController","$scope","EventsService","$routeParams","EventOperation","eventID","event_id","get","checkin","user_id","then","response","uncheckin","vacate","unvacate","eventsController","events","query","toCheckIn","deleteEvent","delete","_id","newEvent","name","start_time","addEvent","save","alert","navigationCtrl","currentUser","logout","officersController","OfficerService","officers","newOfficer","addOfficer","user","push","credentials","username","password","errorMessage","login","err","data","message","$http","$window","admin","post","token","saveToken","localStorage","getToken","removeItem","payload","split","atob","JSON","parse","exp","Date","now","service","officer_id","put","remove","$resource","factory"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('cenApp', ['ngRoute', 'ngResource'])\n        .config(config)\n        .run(run);\n\n    config.$inject = ['$routeProvider', '$locationProvider'];\n    function config ($routeProvider, $locationProvider) {\n        $routeProvider\n            .when('/', {\n                templateUrl: 'home/home.view.html',\n                controller: 'homeCtrl',\n                controllerAs: 'vm'\n            })\n            .when('/login', {\n                templateUrl: '/auth/login/login.view.html',\n                controller: 'loginController',\n                controllerAs: 'vm'\n            })\n            .when('/app', {\n                templateUrl: '/app/app.view.html',\n                controller: 'appController',\n                controllerAs: 'vm'\n            })\n            .when('/officers', {\n                templateUrl: '/officers/officers.view.html',\n                controller: 'officersController',\n                controllerAs: 'vm'\n            })\n            .when('/officers/analysis', {\n                templateUrl: '/officers/analysis.view.html',\n                controller: 'officersController',\n                controllerAs: 'vm'\n            })\n            .when('/events', {\n                templateUrl: '/events/events.view.html',\n                controller: 'eventsController',\n                controllerAs: 'vm'\n            })\n            .when('/events/:event_id', {\n                templateUrl: '/events/event.view.html',\n                controller: 'eventController',\n                controllerAs: 'vm'\n            })\n            .otherwise({redirectTo: '/'});\n\n        // use the HTML5 History API\n        $locationProvider.html5Mode(true);\n    }\n\n    run.$inject= ['$rootScope', '$location', 'Authentication'];\n    function run($rootScope, $location, Authentication) {\n        $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n            if ($location.path() === '/app' && !Authentication.isLoggedIn()) {\n                $location.path('/');\n            }\n        });\n    }\n\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('appController', loginController);\n\n\n    loginController.$inject = ['$location', 'Authentication'];\n    function loginController($location, Authentication) {\n        var vm = this;\n\n        vm.toOfficers = function() {\n            $location.path('officers');\n        };\n        vm.toEvents = function () {\n            $location.path('events')\n        };\n    }\n})();","(function() {\n\n    angular\n        .module('cenApp')\n        .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n        console.log('Home controller is running');\n    };\n\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('eventController', eventController);\n\n\n    eventController.$inject = ['$scope','$location', 'EventsService', '$routeParams','EventOperation'];\n    function eventController($scope, $location, EventsService, $routeParams, EventOperation) {\n        var vm = this;\n        var eventID = $routeParams.event_id;\n        vm.event = EventsService.get({event_id: eventID});\n\n        vm.checkin = function (user_id) {\n            EventOperation.checkin(eventID, user_id)\n                .then(function successCallback(response) {\n                    vm.event = EventsService.get({event_id: eventID});\n                }, function errorCallback(response) {\n                    console.log(response);\n                });\n        };\n\n\n        vm.uncheckin = function (user_id) {\n            EventOperation.uncheckin(eventID, user_id)\n                .then(function successCallback(response) {\n                    vm.event = EventsService.get({event_id: eventID});\n                }, function errorCallback(response) {\n                    console.log(response);\n                });\n        };\n\n        vm.vacate = function (user_id) {\n            EventOperation.vacate(eventID, user_id)\n                .then(function successCallback(response) {\n                    vm.event = EventsService.get({event_id: eventID});\n                }, function errorCallback(response) {\n                    console.log(response);\n                });\n        };\n\n        vm.unvacate = function (user_id) {\n            EventOperation.unvacate(eventID, user_id)\n                .then(function successCallback(response) {\n                    vm.event = EventsService.get({event_id: eventID});\n                }, function errorCallback(response) {\n                    console.log(response);\n                });\n        };\n    }\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('eventsController', eventsController);\n\n\n    eventsController.$inject = ['$scope','$location', 'EventsService'];\n    function eventsController($scope, $location, EventsService) {\n        var vm = this;\n\n        vm.events = EventsService.query();\n\n        vm.toCheckIn = function (event_id) {\n            $location.path('events/' + event_id);\n        };\n\n        vm.deleteEvent = function (event) {\n            EventsService.delete({event_id: event._id}, function () {\n                vm.events = EventsService.query();\n            });\n        };\n\n        vm.newEvent ={\n            name: \"\",\n            start_time: \"\"\n        };\n\n        vm.addEvent = function () {\n            EventsService.save(vm.newEvent, function (event) {\n                if(event.name) {\n                    console.log(event);\n                    vm.events = EventsService.query();\n                }else{\n                    alert(\"Event already existed\");\n                }\n            })\n\n        }\n\n    }\n})();","(function () {\n\n    angular\n        .module('cenApp')\n        .controller('navigationCtrl', navigationCtrl);\n\n    navigationCtrl.$inject = ['$location','Authentication'];\n    function navigationCtrl($location, Authentication) {\n        var vm = this;\n\n        vm.isLoggedIn = Authentication.isLoggedIn();\n\n        vm.currentUser = Authentication.currentUser();\n\n        vm.logout = Authentication.logout();\n\n    }\n\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('officersController', officersController);\n\n\n    officersController.$inject = ['$scope','$location', 'OfficerService'];\n    function officersController($scope, $location, OfficerService) {\n        var vm = this;\n\n        vm.officers = OfficerService.query();\n\n        vm.newOfficer ={\n            name: \"\"\n        };\n\n        vm.addOfficer = function () {\n            OfficerService.save(vm.newOfficer, function (user) {\n                if(user.name) {\n                    console.log(user);\n                    vm.officers.push(user);\n                }else{\n                    alert(\"Officer already existed\")\n                }\n            })\n              \n        }\n\n    }\n})();","(function () {\n    angular\n        .module(\"cenApp\")\n        .controller('loginController', loginController);\n\n\n    loginController.$inject = ['$location', 'Authentication'];\n    function loginController($location, Authentication) {\n        var vm = this;\n        vm.credentials = {\n            username: \"\",\n            password: \"\"\n        };\n\n        vm.errorMessage = \"\";\n\n        vm.login = function() {\n            vm.errorMessage = \"\";\n            Authentication\n                .login(vm.credentials)\n                .then(function successCallback(response) {\n                        $location.path('app');\n                    }, function errorCallback(err) {\n                        vm.errorMessage = err.data.message;\n                    });\n        }\n    }\n})();","(function () {\n    angular\n        .module('cenApp')\n        .service('Authentication', Authentication);\n\n    Authentication.$inject = ['$http', '$window'];\n    function Authentication($http, $window) {\n        \n        // var register = function (user) {\n        //     $http.post('auth/signup', user).success(function (data) {\n        //        saveToken(data.token);\n        //     });\n        // };\n\n        var login = function (admin) {\n            return $http.post('/auth/login', admin).then(function (data) {\n                console.log(data);\n                console.log(data.data.token);\n                saveToken(data.data.token);\n            });\n        };\n        \n        var saveToken = function (token) {\n            // console.log(data);\n            $window.localStorage['access-token'] = token;\n        };\n\n        var getToken = function () {\n            return $window.localStorage['access-token'];\n        };\n\n        var logout = function () {\n            $window.localStorage.removeItem('access-token');\n        };\n\n        var isLoggedIn = function () {\n            var token = getToken();\n            var payload;\n\n            if (token){\n                payload = token.split('.')[1];\n                payload = $window.atob(payload);\n                payload = JSON.parse(payload);\n                return payload.exp > Date.now() /1000;\n            }else{\n                return false\n            }\n        };\n\n        var currentUser = function() {\n            if(isLoggedIn()){\n                var token = getToken();\n                var payload = token.split('.')[1];\n                payload = $window.atob(payload);\n                payload = JSON.parse(payload);\n                return {\n                    username: payload.username,\n                    name : payload.name\n                };\n            }\n        };\n\n        return {\n            //register: register,\n            login: login,\n            saveToken: saveToken,\n            getToken: getToken,\n            logout: logout,\n            isLoggedIn: isLoggedIn,\n            currentUser: currentUser\n        };\n    }\n})();","(function () {\n    angular\n        .module('cenApp')\n        .service('EventOperation', EventOperation);\n\n    EventOperation.$inject = ['$http', '$window'];\n    function EventOperation($http, $window) {\n\n        var checkin = function (event_id, officer_id) {\n            return $http.put('/api/events/' + event_id + '/checkin/' + officer_id);\n        };\n\n        var uncheckin = function (event_id, officer_id) {\n            return $http.put('/api/events/' + event_id + '/uncheckin/' + officer_id)\n        };\n\n        var vacate = function (event_id, officer_id) {\n            return $http.put('/api/events/' + event_id + '/vacate/' + officer_id)\n        };\n\n        var unvacate = function (event_id, officer_id) {\n            return $http.put('/api/events/' + event_id + '/unvacate/' + officer_id)\n        };\n\n        var remove = function (event_id, officer_id) {\n            return $http.put('/api/events/' + event_id + '/rm/' + officer_id)\n        };\n\n        return {\n            checkin: checkin,\n            uncheckin: uncheckin,\n            vacate: vacate,\n            unvacate: unvacate,\n            remove: remove\n        };\n    }\n})();","(function () {\n    angular\n        .module('cenApp')\n        .factory('EventsService', EventsService);\n\n    EventsService.$inject = ['$resource'];\n    function EventsService($resource) {\n        return $resource('api/events/:event_id');\n    }\n})();","(function () {\n    angular\n        .module('cenApp')\n        .factory('OfficerService', OfficerService);\n\n    OfficerService.$inject = ['$resource'];\n    function OfficerService($resource) {\n            return $resource('api/officers/:id');\n    }\n})();"]}